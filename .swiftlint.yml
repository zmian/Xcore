disabled_rules:
  - cyclomatic_complexity
  - file_length
  - force_cast
  - force_try
  - force_unwrapping
  - function_body_length
  - function_parameter_count
  - line_length
  - missing_docs
  - todo
  - type_body_length
  - variable_name
  - large_tuple
  - switch_case_alignment
  - discarded_notification_center_observer
  - unused_closure_parameter
  - operator_whitespace
  - shorthand_operator
opt_in_rules:
  - switch_case_on_newline
  - unneeded_parentheses_in_closure_argument
  - trailing_closure
  - closure_spacing
  - contains_over_first_not_nil
  - discouraged_object_literal
  - empty_string
  - first_where
  - implicit_return
  - joined_default_parameter
  - no_extension_access_modifier
  - overridden_super_call
  - redundant_nil_coalescing
  - syntactic_sugar
excluded:
  - Pods
  - Carthage
custom_rules:
  import_xcore:
    name: "Import Xcore"
    regex: "^import Xcore$"
    match_kinds:
      - identifier
      - keyword
    message: "Xcore is imported globally. Please remove this import."

  equal_space:
    regex: "(?:([ ]{2,}=)|(=[ ]{2,}))"
    message: "Expected only one space before and after ="
    match_kinds:
      - argument
      - attribute.builtin
      - attribute.id
      - buildconfig.id
      - buildconfig.keyword
      - identifier
      - keyword
      - number
      - objectliteral
      - parameter
      - placeholder
      - string
      - string_interpolation_anchor
      - typeidentifier

  comma_space:
    regex: ",[ ]{2,}"
    message: "Expected only one space after ',"

  double_space:
    name: "Double space"
    regex: "([a-z,A-Z] \\s+)"
    message: "Double space between keywords"
    match_kinds: keyword

  comments_space:
    name: "Space After Comment"
    regex: "(^ *//\\w+)"
    message: "There should be a space after //"
    severity: error

  unnecessary_type:
    name: "Unnecessary Type"
    regex: "[ a-zA-Z0-9]*(?:let|var) [ a-zA-Z0-9]*: ([a-zA-Z0-9]*)[\\? ]*= \\1"
    message: "Type definition not needed"

  weak_capture_space:
    regex: "\\{\\[weak"
    message: "Expected a space between [{"

  inconsistent_naming_weak_self:
    name: "Inconsistent Naming"
    regex: "weakSelf"
    message: "Rename `weakSelf` to be `strongSelf` to follow codebase naming convention."

  inconsistent_naming_header_view:
    name: "Inconsistent Naming"
    regex: "(let|var) header = (.*)View"
    message: "Rename `header` to be `headerView` to follow codebase naming convention."

  inconsistent_naming_footer_view:
    name: "Inconsistent Naming"
    regex: "(let|var) footer = (.*)View"
    message: "Rename `footer` to be `footerView` to follow codebase naming convention."

  override_func:
    regex: "override (open|public|private|internal|fileprivate)"
    message: "Use open override or public override instead"

  vertical_whitespace_opening_braces:
    included: ".*.swift"
    regex: '[{(\[][ \t]*\n[ \t]*\n'
    name: "Vertical Whitespace after Opening Braces"
    message: "Don't include vertical whitespace (empty line) after opening braces."

  vertical_whitespace_closing_braces:
    included: ".*.swift"
    regex: '\n[ \t]*\n[ \t]*[)}\]]'
    name: "Vertical Whitespace before Closing Braces"
    message: "Don't include vertical whitespace (empty line) before closing braces."

  # braces_space:
  #   regex: "[^ ]\\{"
  #   message: "Expected a space before {"
  #   match_kinds:
  #     - argument
  #     - attribute.builtin
  #     - attribute.id
  #     - buildconfig.id
  #     - buildconfig.keyword
  #     - identifier
  #     - keyword
  #     - number
  #     - objectliteral
  #     - parameter
  #     - placeholder
  #     - string_interpolation_anchor
  #     - typeidentifier
